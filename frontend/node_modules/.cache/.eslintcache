[{"E:\\frontendreact\\src\\index.js":"1","E:\\frontendreact\\src\\App.js":"2","E:\\frontendreact\\src\\components\\Header.js":"3","E:\\frontendreact\\src\\components\\AddButton.js":"4","E:\\frontendreact\\src\\components\\ListItem.js":"5","E:\\frontendreact\\src\\pages\\TaskPage.js":"6","E:\\frontendreact\\src\\pages\\TasksListPage.js":"7","E:\\frontendreact\\src\\components\\Navbar.js":"8","E:\\elnino-trial-day\\frontendreact\\src\\index.js":"9","E:\\elnino-trial-day\\frontendreact\\src\\App.js":"10","E:\\elnino-trial-day\\frontendreact\\src\\pages\\TasksListPage.js":"11","E:\\elnino-trial-day\\frontendreact\\src\\pages\\TaskPage.js":"12","E:\\elnino-trial-day\\frontendreact\\src\\components\\ListItem.js":"13","E:\\elnino-trial-day\\frontendreact\\src\\components\\ProjectsListComponent.js":"14","E:\\elnino-trial-day\\frontendreact\\src\\components\\ListProject.js":"15","E:\\elnino-trial-day\\frontendreact\\src\\components\\DropDownComponent.js":"16","E:\\elnino-trial-day\\frontendreact\\src\\components\\AddProject.js":"17","E:\\elnino-trial-day\\frontendreact\\src\\ApiCaller.js":"18","E:\\elnino-trial-day\\frontendreact\\src\\Helper.js":"19","E:\\elnino-trial-day\\frontendreact\\src\\pages\\MainPage.js":"20","E:\\elnino-trial-day\\frontendreact\\src\\components\\Buttons.js":"21"},{"size":196,"mtime":1675979291757,"results":"22","hashOfConfig":"23"},{"size":286,"mtime":1676035760946,"results":"24","hashOfConfig":"23"},{"size":178,"mtime":1631385082000,"results":"25","hashOfConfig":"23"},{"size":301,"mtime":1631385082000,"results":"26","hashOfConfig":"23"},{"size":1044,"mtime":1676036734274,"results":"27","hashOfConfig":"23"},{"size":3009,"mtime":1676036402001,"results":"28","hashOfConfig":"23"},{"size":999,"mtime":1676036463462,"results":"29","hashOfConfig":"23"},{"size":1816,"mtime":1676035812585,"results":"30","hashOfConfig":"23"},{"size":205,"mtime":1676476914409,"results":"31","hashOfConfig":"32"},{"size":309,"mtime":1676766289496,"results":"33","hashOfConfig":"32"},{"size":1465,"mtime":1676861347631,"results":"34","hashOfConfig":"32"},{"size":4656,"mtime":1676862194319,"results":"35","hashOfConfig":"32"},{"size":938,"mtime":1676855659849,"results":"36","hashOfConfig":"32"},{"size":1041,"mtime":1676855627162,"results":"37","hashOfConfig":"32"},{"size":2701,"mtime":1676861114131,"results":"38","hashOfConfig":"32"},{"size":1847,"mtime":1676823067677,"results":"39","hashOfConfig":"32"},{"size":874,"mtime":1676858213208,"results":"40","hashOfConfig":"32"},{"size":2104,"mtime":1676822609597,"results":"41","hashOfConfig":"32"},{"size":109,"mtime":1676745554602,"results":"42","hashOfConfig":"32"},{"size":2117,"mtime":1676822514763,"results":"43","hashOfConfig":"32"},{"size":1248,"mtime":1676823104455,"results":"44","hashOfConfig":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"dl2qpo",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"16aeh76",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\frontendreact\\src\\index.js",[],["93","94"],"E:\\frontendreact\\src\\App.js",[],"E:\\frontendreact\\src\\components\\Header.js",[],["95","96"],"E:\\frontendreact\\src\\components\\AddButton.js",[],"E:\\frontendreact\\src\\components\\ListItem.js",["97","98"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nlet getTime = (task) => {\n    return new Date(task.updated).toLocaleDateString()\n}\n\nlet getDeadline = (task) => {\n    return new Date(task.deadline).toLocaleDateString()\n}\n\nlet getTitle = (task) => {\n\n    let title = task.title.split('\\n')[0]\n    console.log(title)\n    if (title.length > 45) {\n        return title.slice(0, 45)\n    }\n    return title\n}\n\nlet getContent = (task) => {\n    let title = getTitle(task)\n    let content = task.description.replaceAll('\\n', ' ')\n    content = content.replaceAll(title, '')\n\n    if (content.length > 45) {\n        return content.slice(0, 45) + '...'\n    } else {\n        return content\n    }\n}\n\nconst ListItem = ({ task: task }) => {\n    return (\n        <Link to={`/task/${task.id}`}>\n            <div className=\"notes-list-item\" >\n                <h3>{getTitle(task)}</h3>\n                <p><span>Deadline: {getDeadline(task)}</span></p><p>{getContent(task)}</p>\n            </div>\n\n        </Link>\n    )\n}\n\nexport default ListItem\n","E:\\frontendreact\\src\\pages\\TaskPage.js",["99","100","101","102"],"import React, { useState, useEffect } from 'react'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst TaskPage = ({ match, history }) => {\n\n    let taskId = match.params.id\n    let [task, setTask] = useState(null)\n    const [checked, setChecked] = React.useState(false);\n\n    useEffect(() => {\n        getTask()\n    }, [taskId])\n\n    const Checkbox = ({ label, value, onChange }) => {\n        return (\n          <label>\n            <input type=\"checkbox\" checked={value} onChange={onChange} />\n            {label}\n          </label>\n        );\n    };\n\n    let getTask = async () => {\n        if (taskId === 'new') return\n        let response = await fetch(`/api/tasks/${taskId}/`)\n        let data = await response.json()\n        setTask(data)\n    }\n\n    let createTask = async () => {\n        fetch(`/api/tasks/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n    }\n\n\n    let updateTask = async () => {\n        fetch(`/api/tasks/${taskId}/`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n    }\n\n    let toggleCheckbox = (label) => {\n        console.log('toggle')\n    }\n\n    let deleteTask = async () => {\n        fetch(`/api/tasks/${taskId}/`, {\n            method: 'DELETE',\n            'headers': {\n                'Content-Type': 'application/json'\n            }\n        })\n        history.push('/')\n    }\n\n    let handleSubmit = () => {\n        if (taskId !== 'new' && task.description === '') {\n            deleteTask()\n        } else if (taskId !== 'new') {\n            updateTask()\n        } else if (task?.description && taskId === 'new' && task.description !== null) {\n            createTask()\n        }\n        history.push('/')\n    }\n\n    let handleChange = (value) => {\n        setTask(task => ({ ...task, 'description': value }))\n    }\n\n    return (\n        <div className=\"note\" >\n            <div className=\"note-header\">\n                <h3>\n                    <ArrowLeft onClick={handleSubmit} />\n                </h3>\n                {taskId !== 'new' ? (\n                    <button onClick={deleteTask}>Delete</button>\n                ) : (\n                    <button onClick={handleSubmit}>Done</button>\n                )}\n\n                </div>\n            <textarea className='textarea title' onChange={(e) => { handleChange(e.target.value) }} value={task?.title}></textarea>\n            \n            <label>\n                \n                <input className='checkbox task'\n                type=\"checkbox\"\n                checked={checked}\n                onChange={handleChange}\n                />\n                <textarea className='textarea body' onChange={(e) => { handleChange(e.target.value) }} value={task?.description}></textarea>\n            </label>\n        </div>\n    )\n}\n\nexport default TaskPage\n","E:\\frontendreact\\src\\pages\\TasksListPage.js",[],"E:\\frontendreact\\src\\components\\Navbar.js",["103"],"import React, {useState} from \"react\";\r\nimport './Navbar.css'\r\nimport {\r\n    HashRouter as Router,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport TasksListPage from './../pages/TasksListPage.js'\r\nimport TaskPage from './../pages/TaskPage.js'\r\n\r\nconst Navbar = () => {\r\n\r\n    // to change burger classes\r\n    const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\")\r\n    const [menu_class, setMenuClass] = useState(\"menu hidden\")\r\n    const [isMenuClicked, setIsMenuClicked] = useState(false)\r\n    const [mainContainer, setContainerWidth] = useState(\"main-container full-width dark\")\r\n\r\n    // toggle burger menu change\r\n    const updateMenu = () => {\r\n        if(!isMenuClicked) {\r\n            setBurgerClass(\"burger-bar clicked\")\r\n            setMenuClass(\"menu visible\")\r\n            setContainerWidth(\"main-container shrinked dark\")\r\n        }\r\n        else {\r\n            setBurgerClass(\"burger-bar unclicked\")\r\n            setMenuClass(\"menu hidden\")\r\n            setContainerWidth(\"main-container full-width dark\")\r\n        }\r\n        setIsMenuClicked(!isMenuClicked)\r\n    }\r\n\r\n    return(\r\n        <div style={{width: '100%', height: '100vh'}}>\r\n            <nav>\r\n                <div className=\"burger-menu\" onClick={updateMenu}>\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                </div>\r\n            </nav>\r\n            <div className={mainContainer}>\r\n\r\n          <div className=\"app\">\r\n\r\n            <Route path=\"/\" exact component={TasksListPage} />\r\n            <Route path=\"/task/:id\" component={TaskPage} />\r\n          </div>\r\n        </div>\r\n            <div className={menu_class}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","E:\\elnino-trial-day\\frontendreact\\src\\index.js",[],["104","105"],"E:\\elnino-trial-day\\frontendreact\\src\\App.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\pages\\TasksListPage.js",["106"],"E:\\elnino-trial-day\\frontendreact\\src\\pages\\TaskPage.js",["107","108"],"E:\\elnino-trial-day\\frontendreact\\src\\components\\ListItem.js",["109"],"E:\\elnino-trial-day\\frontendreact\\src\\components\\ProjectsListComponent.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\components\\ListProject.js",["110"],"E:\\elnino-trial-day\\frontendreact\\src\\components\\DropDownComponent.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\components\\AddProject.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\ApiCaller.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\Helper.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\pages\\MainPage.js",[],"E:\\elnino-trial-day\\frontendreact\\src\\components\\Buttons.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":5,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":34,"column":21,"nodeType":"123","messageId":"124","endLine":34,"endColumn":31,"fix":"125"},{"ruleId":"117","severity":1,"message":"126","line":8,"column":21,"nodeType":"119","messageId":"120","endLine":8,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":12,"column":8,"nodeType":"129","endLine":12,"endColumn":16,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"131","line":14,"column":11,"nodeType":"119","messageId":"120","endLine":14,"endColumn":19},{"ruleId":"117","severity":1,"message":"132","line":51,"column":9,"nodeType":"119","messageId":"120","endLine":51,"endColumn":23},{"ruleId":"117","severity":1,"message":"133","line":4,"column":19,"nodeType":"119","messageId":"120","endLine":4,"endColumn":25},{"ruleId":"111","replacedBy":"134"},{"ruleId":"113","replacedBy":"135"},{"ruleId":"127","severity":1,"message":"136","line":15,"column":8,"nodeType":"129","endLine":15,"endColumn":10,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"128","line":16,"column":8,"nodeType":"129","endLine":16,"endColumn":22,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"139","line":16,"column":17,"nodeType":"140","endLine":16,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":30,"column":20,"nodeType":"123","messageId":"124","endLine":30,"endColumn":30,"fix":"141"},{"ruleId":"121","severity":1,"message":"142","line":8,"column":24,"nodeType":"123","messageId":"124","endLine":8,"endColumn":40,"fix":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"no-unused-vars","'getTime' is assigned a value but never used.","Identifier","unusedVar","no-useless-rename","Destructuring assignment task unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"146","text":"147"},"'setChecked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTask'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'Checkbox' is assigned a value but never used.","'toggleCheckbox' is assigned a value but never used.","'Router' is defined but never used.",["144"],["145"],"React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.",["149"],["150"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal",{"range":"151","text":"147"},"Destructuring assignment project unnecessarily renamed.",{"range":"152","text":"153"},"no-global-assign","no-unsafe-negation",[724,734],"task",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"154","fix":"158"},[625,635],[322,338],"project","Update the dependencies array to be: [getTask, taskId]",{"range":"159","text":"160"},"Update the dependencies array to be: [getTasks]",{"range":"161","text":"162"},{"range":"163","text":"160"},[346,354],"[getTask, taskId]",[468,470],"[getTasks]",[557,571]]