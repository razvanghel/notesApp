{"ast":null,"code":"var _jsxFileName = \"E:\\\\elnino-trial-day\\\\frontendreact\\\\src\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactComponent as ArrowLeft } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let taskId = match.params.id;\n  let [task, setTask] = useState(null);\n  const [checked, setChecked] = React.useState(false);\n  useEffect(() => {\n    getTask();\n  }, [taskId]);\n  const Checkbox = _ref2 => {\n    let {\n      label,\n      value,\n      onChange\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this);\n  };\n  let getTask = async () => {\n    if (taskId === 'new') return;\n    let response = await fetch(`/api/tasks/${taskId}/`);\n    let data = await response.json();\n    setTask(data);\n  };\n  let createTask = async () => {\n    fetch(`/api/tasks/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n  };\n  let updateTask = async () => {\n    console.log('BODY');\n    console.log(task);\n    fetch(`/api/tasks/${taskId}/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n  };\n  let toggleCheckbox = label => {\n    console.log('toggle');\n  };\n  let deleteTask = async () => {\n    fetch(`/api/tasks/${taskId}/`, {\n      method: 'DELETE',\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n    history.push('/');\n  };\n  let handleSubmit = () => {\n    if (taskId !== 'new' && task.description === '') {\n      deleteTask();\n    } else if (taskId !== 'new') {\n      updateTask();\n    } else if (task !== null && task !== void 0 && task.description && taskId === 'new' && task.description !== null) {\n      createTask();\n    }\n    history.push('/');\n  };\n  let handleChange = value => {\n    setTask(task => ({\n      ...task,\n      'description': value\n    }));\n  };\n  let changeTitle = value => {\n    setTask(task => ({\n      ...task,\n      'title': value\n    }));\n  };\n  let setDeadline = value => {\n    setTask(task => ({\n      ...task,\n      'title': value\n    }));\n  };\n  let handleCheck = () => {\n    setChecked(!checked);\n  };\n  let getDeadline = task => {\n    return new Date(task === null || task === void 0 ? void 0 : task.deadline).toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), taskId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"checkbox task\",\n      type: \"checkbox\",\n      checked: task === null || task === void 0 ? void 0 : task.completed,\n      onChange: handleCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea title\",\n      onChange: e => {\n        changeTitle(e.target.value);\n      },\n      value: task === null || task === void 0 ? void 0 : task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Deadline: \", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea title\",\n        onChange: e => {\n          changeTitle(e.target.value);\n        },\n        value: task === null || task === void 0 ? void 0 : task.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea body\",\n        onChange: e => {\n          handleChange(e.target.value);\n        },\n        value: task === null || task === void 0 ? void 0 : task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"3purR26+3zbupAQDO1f82tKBc6E=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","TaskPage","match","history","taskId","params","id","task","setTask","checked","setChecked","getTask","Checkbox","label","value","onChange","response","fetch","data","json","createTask","method","headers","body","JSON","stringify","updateTask","console","log","toggleCheckbox","deleteTask","push","handleSubmit","description","handleChange","changeTitle","setDeadline","handleCheck","getDeadline","Date","deadline","toLocaleDateString","completed","e","target","title"],"sources":["E:/elnino-trial-day/frontendreact/src/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst TaskPage = ({ match, history }) => {\n\n    let taskId = match.params.id\n    let [task, setTask] = useState(null)\n    const [checked, setChecked] = React.useState(false);\n\n    useEffect(() => {\n        getTask()\n    }, [taskId])\n\n    const Checkbox = ({ label, value, onChange }) => {\n        return (\n          <label>\n            <input type=\"checkbox\" checked={value} onChange={onChange} />\n            {label}\n          </label>\n        );\n    };\n\n    let getTask = async () => {\n        if (taskId === 'new') return\n        let response = await fetch(`/api/tasks/${taskId}/`)\n        let data = await response.json()\n        setTask(data)\n    }\n\n    let createTask = async () => {\n        fetch(`/api/tasks/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n    }\n\n\n    let updateTask = async () => {\n        console.log('BODY')\n        console.log(task)\n        fetch(`/api/tasks/${taskId}/`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n    }\n\n    let toggleCheckbox = (label) => {\n        console.log('toggle')\n    }\n\n    let deleteTask = async () => {\n        fetch(`/api/tasks/${taskId}/`, {\n            method: 'DELETE',\n            'headers': {\n                'Content-Type': 'application/json'\n            }\n        })\n        history.push('/')\n    }\n\n    let handleSubmit = () => {\n        if (taskId !== 'new' && task.description === '') {\n            deleteTask()\n        } else if (taskId !== 'new') {\n            updateTask()\n        } else if (task?.description && taskId === 'new' && task.description !== null) {\n            createTask()\n        }\n        history.push('/')\n    }\n\n    let handleChange = (value) => {\n        setTask(task => ({ ...task, 'description': value }))\n    }\n    \n\n    let changeTitle = (value) => {\n        setTask(task => ({ ...task, 'title': value }))\n    }\n\n    let setDeadline = (value) => {\n        setTask(task => ({ ...task, 'title': value }))\n    }\n\n    let handleCheck = () => {\n        setChecked(!checked)\n    }\n\n    let getDeadline = (task) => {\n        return new Date(task?.deadline).toLocaleDateString()\n    }\n    \n    return (\n        <div className=\"note\" >\n            <div className=\"note-header\">\n                <h3>\n                    <ArrowLeft onClick={handleSubmit} />\n                </h3>\n                {taskId !== 'new' ? (\n                    <button onClick={deleteTask}>Delete</button>\n                ) : (\n                    <button onClick={handleSubmit}>Done</button>\n                )}\n                </div>\n                \n            <p>Title</p>\n                <input className='checkbox task'\n                type=\"checkbox\"\n                checked={task?.completed}\n                onChange={handleCheck}\n                /> \n            \n             <textarea className='textarea title' onChange={(e) => { changeTitle(e.target.value) }} value={task?.title}></textarea>\n            <p>\n                Deadline: <h1>{}</h1>\n                <textarea className='textarea title' onChange={(e) => { changeTitle(e.target.value) }} value={task?.deadline}></textarea>\n            </p>\n            <p>\n            Description:\n            </p>\n            <label>\n                \n                \n                <textarea className='textarea body' onChange={(e) => { handleChange(e.target.value) }} value={task?.description}></textarea>\n            </label>\n        </div>\n    )\n}\n\nexport default TaskPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}