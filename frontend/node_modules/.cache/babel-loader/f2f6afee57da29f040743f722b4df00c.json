{"ast":null,"code":"var _jsxFileName = \"E:\\\\elnino-trial-day\\\\frontendreact\\\\src\\\\pages\\\\TasksListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ListItem from './../components/ListItem.js';\nimport AddButton from './../components/AddButton.js';\nimport './TasksListPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksListPage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let project = match.params.name;\n  let [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    getTasks();\n  }, []);\n  let getTasksFromProject = async project => {\n    let response = await fetch(`/api/project/${project}`);\n    let data = await response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"tasks-title\",\n        children: \"\\u2636 Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tasks-count\",\n        children: tasks.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          task: task,\n          project: project\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(TasksListPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TasksListPage;\nexport default TasksListPage;\nvar _c;\n$RefreshReg$(_c, \"TasksListPage\");","map":{"version":3,"names":["React","useState","useEffect","ListItem","AddButton","TasksListPage","match","history","project","params","name","tasks","setTasks","getTasks","getTasksFromProject","response","fetch","data","json","length","map","task","index"],"sources":["E:/elnino-trial-day/frontendreact/src/pages/TasksListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ListItem from './../components/ListItem.js'\r\nimport AddButton from './../components/AddButton.js'\r\nimport './TasksListPage.css'\r\n\r\nconst TasksListPage = ({match, history}) => {\r\n\r\n    let project = match.params.name\r\n    let [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        getTasks()\r\n    }, [])\r\n\r\n    let getTasksFromProject = async (project) => {\r\n        let response = await fetch(`/api/project/${project}`)\r\n        let data = await response.json()\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <div className=\"task-header\">\r\n                <h2 className=\"tasks-title\">&#9782; Tasks</h2>\r\n                <p className=\"tasks-count\">{tasks.length}</p>\r\n            </div>\r\n\r\n            <div className=\"tasks-list\">\r\n                 {tasks.map((task, index) => (\r\n                    <label>\r\n                            <ListItem key={index} task={task} project={project}/>\r\n                    </label>\r\n                ))}\r\n            </div>\r\n            <AddButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksListPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAO,qBAAqB;AAAA;AAE5B,MAAMC,aAAa,GAAG,QAAsB;EAAA;EAAA,IAArB;IAACC,KAAK;IAAEC;EAAO,CAAC;EAEnC,IAAIC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAACC,IAAI;EAC/B,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZW,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,mBAAmB,GAAG,MAAON,OAAO,IAAK;IACzC,IAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeR,OAAQ,EAAC,CAAC;IACrD,IAAIS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EACpC,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAI,SAAS,EAAC,aAAa;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAK,eAC9C;QAAG,SAAS,EAAC,aAAa;QAAA,UAAEP,KAAK,CAACQ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eAEN;MAAK,SAAS,EAAC,YAAY;MAAA,UACrBR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB;QAAA,uBACQ,QAAC,QAAQ;UAAa,IAAI,EAAED,IAAK;UAAC,OAAO,EAAEb;QAAQ,GAApCc,KAAK;UAAA;UAAA;UAAA;QAAA;MAAiC;QAAA;QAAA;QAAA;MAAA,QAEhE;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd,CAAC;AAAA,GA/BKjB,aAAa;AAAA,KAAbA,aAAa;AAiCnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}