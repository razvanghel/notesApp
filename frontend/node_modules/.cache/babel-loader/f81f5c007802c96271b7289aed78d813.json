{"ast":null,"code":"var _jsxFileName = \"E:\\\\elnino-trial-day\\\\frontendreact\\\\src\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactComponent as ArrowLeft } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow-left.svg\";\nimport './TaskPage.css';\nimport DateTimePicker from 'react-datetime-picker';\nimport DropDownComponent from '../components/DropDownComponent.js';\nimport { deleteTask } from './../ApiCaller.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let taskId = match.params.id;\n  let [task, setTask] = useState(null);\n  useEffect(() => {\n    getTask();\n  }, [taskId, null]);\n  const returnToProjectsPage = () => {\n    if ((task === null || task === void 0 ? void 0 : task.project) == null) history.push(`/project/Inbox/`); //by default a new note with no project selected will be assigned to Inbox\n    else history.push(`/project/${task.project}/`);\n    setTimeout(() => {\n      window.location.reload();\n    }, 30); //reloads after 30ms to ensure the backend has enough time to update\n  };\n\n  const onChange = e => {\n    changeDeadline(e.toISOString());\n  };\n  const getTask = async () => {\n    if (taskId === 'new') return;\n    let response = await fetch(`/api/tasks/${taskId}/`);\n    let data = await response.json();\n    setTask(data);\n  };\n  const createTask = async () => {\n    fetch(`/api/tasks/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    returnToProjectsPage();\n  };\n  const updateTask = async () => {\n    fetch(`/api/tasks/${taskId}/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    returnToProjectsPage();\n  };\n  const taskDelete = () => {\n    deleteTask(taskId);\n    returnToProjectsPage();\n  };\n  const handleSubmit = () => {\n    if (taskId !== 'new' && (task === null || task === void 0 ? void 0 : task.title) === '') {\n      taskDelete();\n    } else if (taskId !== 'new' && (task === null || task === void 0 ? void 0 : task.title) !== '') {\n      updateTask();\n    } else if (task !== null && task !== void 0 && task.description && taskId === 'new') {\n      createTask();\n    }\n    returnToProjectsPage();\n  };\n  const handleChangeProject = value => {\n    setTask(task => ({\n      ...task,\n      'project': value\n    }));\n  };\n  const handleChange = value => {\n    setTask(task => ({\n      ...task,\n      'description': value\n    }));\n  };\n  const changeTitle = value => {\n    setTask(task => ({\n      ...task,\n      'title': value\n    }));\n  };\n  const changeDeadline = value => {\n    setTask(task => ({\n      ...task,\n      'deadline': value\n    }));\n  };\n  const handleCheck = () => {\n    setTask(task => ({\n      ...task,\n      'completed': !task.completed\n    }));\n  };\n  const getDeadline = task => {\n    if (task == null || task.deadline == null) {\n      return null;\n    }\n    return new Date(task.deadline);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), taskId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: taskDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Task:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea title\",\n      onChange: e => {\n        changeTitle(e.target.value);\n      },\n      value: task === null || task === void 0 ? void 0 : task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox task\",\n        type: \"checkbox\",\n        checked: task === null || task === void 0 ? void 0 : task.completed,\n        onChange: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        minDate: new Date(),\n        value: getDeadline(task),\n        clearIcon: null,\n        mode: \"date\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Project\", /*#__PURE__*/_jsxDEV(DropDownComponent, {\n        selected: task === null || task === void 0 ? void 0 : task.project,\n        setSelected: handleChangeProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea body\",\n        onChange: e => {\n          handleChange(e.target.value);\n        },\n        value: task === null || task === void 0 ? void 0 : task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"HbcssAxLTHWqCRHO839ApGabvjg=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","DateTimePicker","DropDownComponent","deleteTask","TaskPage","match","history","taskId","params","id","task","setTask","getTask","returnToProjectsPage","project","push","setTimeout","window","location","reload","onChange","e","changeDeadline","toISOString","response","fetch","data","json","createTask","method","headers","body","JSON","stringify","updateTask","taskDelete","handleSubmit","title","description","handleChangeProject","value","handleChange","changeTitle","handleCheck","completed","getDeadline","deadline","Date","target"],"sources":["E:/elnino-trial-day/frontendreact/src/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\nimport './TaskPage.css'\r\nimport DateTimePicker from 'react-datetime-picker'\r\nimport DropDownComponent from '../components/DropDownComponent.js'\r\nimport { deleteTask } from './../ApiCaller.js'\r\n\r\nconst TaskPage = ({ match, history }) => {\r\n\r\n    let taskId = match.params.id\r\n    let [task, setTask] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTask()\r\n    }, [taskId, null])\r\n\r\n    const returnToProjectsPage = () => {\r\n        if(task?.project == null)\r\n            history.push(`/project/Inbox/`) //by default a new note with no project selected will be assigned to Inbox\r\n        else\r\n            history.push(`/project/${task.project}/`)\r\n        setTimeout(() => {\r\n            window.location.reload()\r\n          }, 30) //reloads after 30ms to ensure the backend has enough time to update\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        changeDeadline(e.toISOString())\r\n    }\r\n\r\n    const getTask = async () => {\r\n        if (taskId === 'new') return\r\n        let response = await fetch(`/api/tasks/${taskId}/`)\r\n        let data = await response.json()\r\n        setTask(data)\r\n    }\r\n\r\n    const createTask = async () => {\r\n        fetch(`/api/tasks/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        })\r\n        \r\n        returnToProjectsPage()\r\n    }\r\n\r\n    const updateTask = async () => {\r\n        fetch(`/api/tasks/${taskId}/`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(task)\r\n        })\r\n        \r\n        returnToProjectsPage()\r\n    }\r\n\r\n    const taskDelete = () => {\r\n        deleteTask(taskId)\r\n        returnToProjectsPage()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (taskId !== 'new' && task?.title === '') {\r\n            taskDelete()\r\n        } else if (taskId !== 'new' && task?.title !== '') {\r\n            updateTask()\r\n        } else if (task?.description && taskId === 'new') {\r\n            createTask()\r\n        }\r\n        returnToProjectsPage()\r\n    }\r\n    \r\n    const handleChangeProject = (value) => {\r\n        setTask(task => ({ ...task, 'project': value }))    \r\n    }\r\n\r\n    const handleChange = (value) => {\r\n        setTask(task => ({ ...task, 'description': value }))\r\n    }\r\n\r\n    const changeTitle = (value) => {\r\n        setTask(task => ({ ...task, 'title': value }))\r\n    }\r\n\r\n    const changeDeadline = (value) => {\r\n        setTask(task => ({ ...task, 'deadline': value }))\r\n    }\r\n\r\n    const handleCheck = () => {\r\n        \r\n        setTask(task => ({...task, 'completed': !task.completed}))\r\n    }\r\n\r\n    const getDeadline = (task) => {\r\n        if (task == null || task.deadline == null){\r\n            return null\r\n        }\r\n        return new Date(task.deadline)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"task\" >\r\n            <div className=\"task-header\">\r\n                <h3>\r\n                    <ArrowLeft onClick={handleSubmit} />\r\n                </h3>\r\n                {taskId !== 'new' ? (\r\n                    <button onClick={taskDelete}>Delete</button>\r\n                ) : (\r\n                    <button onClick={handleSubmit}>Done</button>\r\n                )}\r\n                </div>\r\n                \r\n            <label>Task:</label>\r\n                <textarea \r\n                className='textarea title' \r\n                onChange={(e) => { changeTitle(e.target.value) }} \r\n                value={task?.title}>\r\n                </textarea>\r\n            <br></br>\r\n            <label>\r\n                Status: <input \r\n                className='checkbox task'\r\n                type=\"checkbox\"\r\n                checked={task?.completed}\r\n                onChange={handleCheck}\r\n                /> \r\n            </label> \r\n            <br></br>\r\n            <label>\r\n                Deadline: \r\n                <DateTimePicker \r\n                minDate={new Date()}\r\n                value={getDeadline(task)}\r\n                clearIcon = {null}\r\n                mode = 'date'\r\n                onChange={onChange} \r\n                >\r\n\r\n                </DateTimePicker>\r\n                \r\n            </label>\r\n            <br></br>\r\n            <div>\r\n                Project<DropDownComponent \r\n                selected = {task?.project} \r\n                setSelected={handleChangeProject}\r\n                 />\r\n            </div>\r\n            <h1>\r\n                Description\r\n            </h1>\r\n            <label>\r\n                <textarea \r\n                className='textarea body' \r\n                onChange={(e) => { handleChange(e.target.value) }} \r\n                value={task?.description}></textarea>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}